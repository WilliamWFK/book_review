#BlueJ class context
comment0.target=BookReview
comment0.text=\r\n\ \ Main\ class\ of\ BookReview.\r\n\r\n\ \ @author\ William\ Kho\r\n\ \ @version\ 6/09/2020\r\n
comment1.params=
comment1.target=BookReview()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ BookReview.\r\n
comment10.params=TEXT
comment10.target=java.lang.String\ titleCase(java.lang.String)
comment10.text=\r\n\ \ Converts\ a\ string\ into\ Title\ Case.\r\n\ \ Credit\ to\ https\://www.baeldung.com/java-string-title-case\r\n\r\n\ \ @param\ TEXT\ text\ to\ be\ converted\r\n\ \ @return\ \ text\ in\ TitleCase\r\n
comment11.params=
comment11.target=void\ searchBook()
comment11.text=\r\n\ \ Searches\ a\ book\ from\ bookMap.\r\n\r\n
comment12.params=SEARCH_TERM
comment12.target=boolean\ checkBook(java.lang.String)
comment12.text=\r\n\ \ Checks\ to\ see\ if\ book\ exists.\r\n\ \ @param\ \ SEARCH_TERM\ \ searchTerm\ to\ be\ checked\r\n\ \ @return\ \ true\ if\ bookMap\ does\ contain\ SEARCHTERM\r\n
comment13.params=AUTHOR
comment13.target=void\ setBookAuthor(java.lang.String)
comment13.text=\r\n\ \ Sets\ bookAuthor.\r\n\ \ @param\ AUTHOR\ Name\ of\ author\r\n
comment14.params=NAME
comment14.target=void\ setBookName(java.lang.String)
comment14.text=\r\n\ \ Sets\ bookName.\r\n\ \ @param\ NAME\ Name\ of\ book\r\n
comment15.params=GENRE
comment15.target=void\ setBookGenre(java.lang.String)
comment15.text=\r\n\ \ Set\ bookGenre.\r\n\ \ @param\ \ GENRE\ \ Genre\ of\ book,\ parse\ in\ a\ single\ genre\ only\r\n
comment16.params=ACTION\ X\ Y
comment16.target=void\ mouseRate(java.lang.String,\ double,\ double)
comment16.text=\r\n\ \ Mouse\ manager\ used\ in\ rating\ books.\r\n\r\n\ \ @param\ \ ACTION\ \ What\ action\ mouse\ has\ performed,\ i.e\ clicked,\ released\r\n\ \ @param\ \ X\ \ x-value\ of\ mouse\r\n\ \ @param\ \ Y\ \ y-value\ of\ mouse\r\n
comment2.params=
comment2.target=void\ main()
comment2.text=\r\n\ Main\ routine.\r\n
comment3.params=
comment3.target=void\ mainMenu()
comment3.text=\r\n\ \ Refreshes\ the\ UI\ by\ calling\ refreshMenu()\ and\ then\ adds\ buttons\r\n\ \ If\ there\ are\ less\ than\ 1\ books\ added,\ the\ user\r\n\ \ cannot\ possibly\ delete,\ search,\ rate\ or\ recommend\r\n\ \ so\ the\ menu\ does\ not\ add\ those\ buttons.\r\n
comment4.params=
comment4.target=void\ refreshMenu()
comment4.text=\r\n\ \ Refreshes\ the\ UI\ and\ adds\ the\ quit\ button.\r\n
comment5.params=
comment5.target=void\ addBook()
comment5.text=\r\n\ \ Sets\ the\ name,\ author\ and\ genre\ of\ each\ book\r\n\ \ and\ then\ creates\ a\ new\ book\ object\ to\ add\ into\ bookMap.\r\n
comment6.params=
comment6.target=void\ startRateBook()
comment6.text=\r\n\ \ Starts\ the\ process\ of\ rating\ books.\r\n\ \ Starts\ off\ by\ asking\ the\ user\ for\ a\ book\ to\ rate.\ If\ the\r\n\ \ book\ is\ found\ in\ the\ hashmap\ the\ bookName,\ bookAuthor\ and\ bookGenre\r\n\ \ will\ be\ set,\ else\ it\ will\ retry.\r\n\r\n\ \ rated\ will\ then\ be\ set\ to\ false\ in\ order\ to\ activate\ the\ condition\r\n\ \ used\ in\ mouseRate().\r\n\ \ Calls\ the\ drawButton()\ method\ to\ display\ the\ buttons\ as\ well\ as\r\n\ \ draws\ the\ question\ onto\ the\ canvas.\r\n
comment7.params=LIKED
comment7.target=void\ endRateBook(boolean)
comment7.text=\r\n\ \ Ends\ the\ process\ of\ rating\ books.\r\n\ \ Based\ on\ param\ will\ either\ add\ bookname\ to\ likedBooks\r\n\ \ or\ dislikedBooks\ and\ delete\ the\ entry\ in\ the\ opposite\r\n\ \ ArrayList\ if\ possible.\r\n\r\n\ \ @param\ \ LIKED\ \ boolean\ storing\ whether\ book\ was\ liked,\r\n\ \ true\ \=\ yes\ &\ viceversa\r\n
comment8.params=
comment8.target=void\ deleteBook()
comment8.text=\r\n\ \ Deletes\ a\ book\ from\ bookMap.\r\n\ \ Will\ ask\ the\ user\ for\ a\ book\ to\ delete\ which\ is\r\n\ \ then\ ran\ through\ checkBook().\ If\ returned\ true\r\n\ \ will\ delete\ the\ book\ from\ bookMap\ and\ reduce\ bookTotal\ by\ 1.\r\n
comment9.params=
comment9.target=void\ recommendBook()
comment9.text=\r\n\ \ Recommends\ a\ book\ based\ on\ books\ found\ in\ likedBooks.\r\n
numComments=17
