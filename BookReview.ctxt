#BlueJ class context
comment0.target=BookReview
comment0.text=\ \r\n\ Write\ a\ description\ of\ class\ BookReview\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=BookReview()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ BookReview\ \r\n
comment10.params=
comment10.target=void\ searchBook()
comment11.params=searchTerm
comment11.target=boolean\ checkBook(java.lang.String)
comment11.text=\r\n\ \ Checks\ to\ see\ if\ book\ exists\r\n\ \ @string\ searchTerm\ -\ searchTerm\ to\ be\ checked\r\n
comment12.params=author
comment12.target=void\ setBookAuthor(java.lang.String)
comment12.text=\r\n\ \r\n
comment13.params=name
comment13.target=void\ setBookName(java.lang.String)
comment13.text=\r\n\ \r\n
comment14.params=genre
comment14.target=void\ setBookGenre(java.lang.String)
comment14.text=\r\n\ \r\n
comment15.params=action\ x\ y
comment15.target=void\ mouseRate(java.lang.String,\ double,\ double)
comment15.text=\r\n\ \r\n
comment2.params=
comment2.target=void\ main()
comment2.text=\r\n\ Main\ routine\r\n\r\n
comment3.params=
comment3.target=void\ mainMenu()
comment3.text=\r\n\ \ Refreshes\ the\ UI\ by\ calling\ refreshMenu()\ and\ then\ adds\ buttons\r\n\ \ If\ there\ are\ less\ than\ 1\ books\ added,\ the\ user\r\n\ \ cannot\ possibly\ delete,\ search,\ rate\ or\ recommend\r\n\ \ so\ the\ menu\ does\ not\ add\ those\ buttons.\r\n
comment4.params=
comment4.target=void\ refreshMenu()
comment4.text=\r\n\ \ Refreshes\ the\ UI\ and\ adds\ the\ quit\ button.\r\n
comment5.params=
comment5.target=void\ addBook()
comment5.text=\r\n\ \ Sets\ the\ name,\ author\ and\ genre\ of\ each\ book\r\n\ \ and\ then\ creates\ a\ new\ book\ object\ to\ add\ into\ bookMap.\r\n\ \r\n
comment6.params=
comment6.target=void\ startRateBook()
comment6.text=\r\n\ \ Starts\ the\ process\ of\ rating\ books.\ \r\n\ \ Starts\ off\ by\ asking\ the\ user\ for\ a\ book\ to\ rate.\ If\ the\ \r\n\ \ book\ is\ found\ in\ the\ hashmap\ the\ bookName,\ bookAuthor\ and\ bookGenre\r\n\ \ will\ be\ set,\ else\ it\ will\ retry.\r\n\ \ \r\n\ \ rated\ will\ then\ be\ set\ to\ false\ in\ order\ to\ activate\ the\ condition\r\n\ \ used\ in\ mouseRate().\r\n\ \ Calls\ the\ drawButton()\ method\ to\ display\ the\ buttons\ as\ well\ as\r\n\ \ draws\ the\ question\ onto\ the\ canvas.\r\n\ \ \r\n
comment7.params=liked
comment7.target=void\ endRateBook(boolean)
comment7.text=\r\n\ \ Ends\ the\ process\ of\ rating\ books.\r\n\ \ Based\ on\ param\ will\ either\ add\ bookname\ to\ likedBooks\r\n\ \ or\ dislikedBooks\ and\ delete\ the\ entry\ in\ the\ opposite\r\n\ \ ArrayList\ if\ possible.\r\n\ \ \r\n\ \ @param\ \ liked\ \ boolean\ storing\ whether\ book\ was\ liked,\ true\ \=\ yes\ &\ viceversa\r\n
comment8.params=
comment8.target=void\ deleteBook()
comment8.text=\r\n\ \ Deletes\ a\ book\ from\ bookMap.\r\n\ \ Will\ ask\ the\ user\ for\ a\ book\ to\ delete\ which\ is\r\n\ \ then\ ran\ through\ checkBook().\ If\ returned\ true\r\n\ \ will\ delete\ the\ book\ from\ bookMap\ and\ reduce\ bookTotal\ by\ 1.\r\n\ \ \r\n
comment9.params=
comment9.target=void\ recommendBook()
comment9.text=\r\n\ \ Recommends\ a\ book\ based\ on\ books\ found\ in\ likedBooks.\r\n
numComments=16
